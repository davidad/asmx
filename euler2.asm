; Each new term in the Fibonacci sequence is generated by adding the previous two
; terms. By starting with 1 and 2, the first 10 terms will be:

; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

; By considering the terms in the Fibonacci sequence whose values do not exceed
; four million, find the sum of the even-valued terms.

define fib1 eax
define fib2 ebx
define sum rsi

define max ecx
define one edx

include "startp.inc"
  xor sum, sum     ; set sum to 0 fast
  mov max, 4000000
  mov one, 1
  mov fib1, one    ; faster than setting to 1
  mov fib2, one 
sumfibs:
  xchg fib1, fib2  ; swaps them (fib n-1 is now fibn)
  add fib2, fib1
  cmp fib2, max
  jae done
  ;; check it's even
  test fib2, one
  jnz sumfibs
  add sum, rbx     ; full reg of fib2
  jmp sumfibs
done:
  lea rdi, [msg]
  call printf
  ;; exit
  xor edi, edi
  mov eax, SYSCALL_EXIT
  syscall

msg db 'The sum of the even fib numbers below 4 mil is %d',0xA,0x0
